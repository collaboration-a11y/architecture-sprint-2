name: mongo-sharding

services:
  configSvr:
    image: mongo:7.0.0
    container_name: configSvr
    restart: always
    ports:
      - "27016:${CONFIG_SVR_PORT}"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "${CONFIG_SVR_PORT}",
      ]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongodb1:
    container_name: mongodb1
    image: mongo:7.0.0
    restart: always
    ports:
      - "27017:${MONGODB_DATABASE_PORT}"
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    command: ["--bind_ip_all", "--port", "${MONGODB_DATABASE_PORT}"]
    volumes:
      - mongodb1_data_container:/data/db

  shard1:
    image: mongo:7.0.0
    container_name: shard1
    restart: always
    ports:
      - "27018:${SH_PORT_1}"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "${SH_PORT_1}"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
  shard2:
    image: mongo:7.0.0
    container_name: shard2
    restart: always
    ports:
      - "27019:${SH_PORT_2}"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes: 
      - shard2-data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "${SH_PORT_2}"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:7.0.0
    container_name: mongos_router
    restart: always
    ports:
      - "27020:${MONGOS_ROUTER_PORT}"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSvr:${CONFIG_SVR_PORT}",
        "--bind_ip_all",
        "--port",
        "${MONGOS_ROUTER_PORT}"
      ]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
  pymongo_api:
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16
volumes:
  config-data:
  mongodb1_data_container:
  shard1-data:
  shard2-data:
